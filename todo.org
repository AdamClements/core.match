* Todo List [25/29]
  - [ ] fail nodes should be more descriptive
  - [ ] rename pattern-equals -> constructor-match? or something similar
  - [ ] implement vector pattern matching
  - [X] :else clause support, currently must supply wildcard row yourself
  - [X] Java interop
  - [X] guards
  - [X] or patterns
  - [X] as pattern
  - [X] emit-pattern logic should be open not closed
  - [X] ON HOLD Things are getting a little messy particularly around how we
        deal with bindings. This could use some cleanup.
  - [X] ON HOLD - Compile times are now quite slow (affects running tests) should
        do a basic profiling / optimization pass to eliminate obvious
        areas that contribute to performance degradation.
  - [X] WON'T DO - Devise hash-consing strategy
  - [X] WON'T DO -Implement hash-consing strategy
  - [X] Deal with rest seq patterns
  - [X] Rest seq pattern should themselves be pattern matchable this is
        mostly to support :as - introduce a binding
  - [X] map pattern should support only
  - [X] address the binding bug we saw with seqs. Basically when the algorithm
        selects columns out of order, bindings from named wildcards are 
        not pushed down.
  - [X] wildcards might not get tested so in the binding in the leaf node
        we'll probably want to bind the value there.
  - [X] implement basic map pattern matching
  - [X] add many seq pattern matching test cases so we can easily check
        for regressions
  - [X] When introducing wild card patterns into seq pattern Maranget's
        algo kicks in which is undesirable unless we have PersistentVectors
        we need to enforce choosing first column until the seq occurences are
        cleared
  - [X] Use gensym in seq pattern occurrence introduction
  - [X] Rename all instances of vector pattern to seq pattern since thats
        what it actually is
  - [X] named wildcards
  - [X] Deal with varying length seq patterns
        when we've selected the rows that match seq pattern we need to first
        determine what the largest seq pattern is, we then need to fill
        the seq pattern with crash for the occurences that are out of a
        pattern's bounds
  - [X] Need to detect seq patterns early, flatten and then call compile
        with flattened pattern matrix
  - [X] Fix how we deal with seq pattern tails / crash pattern
  - [X] For cases where there is the default matrix is empty we need
        to insert fail nodes
  - [X] write basic match macro

* Todo List [4/13]
  - [ ] When introducing wild card patterns into seq pattern Maranget's
        algo kicks in which is undesirable unless we have PersistentVectors
        we need to enforce choosing first column until the seq occurences are
        cleared
  - [ ] Deal with varying length seq patterns
        when we've selected the rows that match seq pattern we need to first
        determine what the largest seq pattern is, we then need to fill
        the seq pattern with crash for the occurences that are out of a
        pattern's bounds
  - [ ] Deal with rest seq patterns
  - [ ] Rest seq pattern should themselves be pattern matchable this is
        mostly to support :as - introduce a binding
  - [X] Need to detect seq patterns early, flatten and then call compile
        with flattened pattern matrix
  - [ ] Rename all instances of vector pattern to seq pattern since thats
        what it actually is
  - [X] Fix how we deal with seq pattern tails / crash pattern
  - [X] For cases where there is the default matrix is empty we need
        to insert fail nodes
  - [ ] Use gensym in seq pattern occurrence introduction
  - [X] write basic match macro
  - [ ] implement basic map pattern matching
  - [ ] support only
  - [ ] Devise hash-consing strategy
  - [ ] Implement hash-consing strategy
